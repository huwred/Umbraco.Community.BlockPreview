{"version":3,"file":"blockpreview.context-HcTJE25H.js","sources":["../../assets/src/repository/sources/blockpreview.datasource.ts","../../assets/src/repository/blockpreview.repository.ts","../../assets/src/context/blockpreview.context.ts"],"sourcesContent":["import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\nimport { BlockPreviewService, type BlockValueBlockGridLayoutItemModel, type BlockValueBlockListLayoutItemModel } from '@api';\n\nexport interface BlockPreviewDataSource {\n\n  previewGridMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockGridLayoutItemModel): Promise<UmbDataSourceResponse<string>>;\n  previewListMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockListLayoutItemModel): Promise<UmbDataSourceResponse<string>>;\n\n}\n\nexport class BlockPreviewManagementDataSource implements BlockPreviewDataSource {\n\n  #host: UmbControllerHost;\n\n  constructor(host: UmbControllerHost) {\n    this.#host = host;\n  }\n\n  async previewGridMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockGridLayoutItemModel): Promise<UmbDataSourceResponse<string>> {\n    return await tryExecuteAndNotify(this.#host, BlockPreviewService.postUmbracoBlockpreviewApiV1PreviewGridMarkup({ pageId, blockEditorAlias, culture, requestBody }));\n  }\n\n  async previewListMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockListLayoutItemModel): Promise<UmbDataSourceResponse<string>> {\n    return await tryExecuteAndNotify(this.#host, BlockPreviewService.postUmbracoBlockpreviewApiV1PreviewListMarkup({ pageId, blockEditorAlias, culture, requestBody }));\n  }\n\n }","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { BlockPreviewManagementDataSource } from \"./sources/blockpreview.datasource\";\nimport { BlockValueBlockGridLayoutItemModel, BlockValueBlockListLayoutItemModel } from \"@api\";\n\nexport class BlockPreviewManagementRepository extends UmbControllerBase {\n  #blockPreviewDataSource: BlockPreviewManagementDataSource;\n\n  constructor(host: UmbControllerHost) {\n    super(host);\n    this.#blockPreviewDataSource = new BlockPreviewManagementDataSource(this);\n  }\n\n  async previewGridMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockGridLayoutItemModel) {\n    return await this.#blockPreviewDataSource.previewGridMarkup(pageId, blockEditorAlias, culture, requestBody);\n  }\n\n  async previewListMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockListLayoutItemModel) {\n    return await this.#blockPreviewDataSource.previewListMarkup(pageId, blockEditorAlias, culture, requestBody);\n  }\n\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\n\nimport { BlockPreviewManagementRepository } from \"../repository/blockpreview.repository\";\n\nimport { type BlockValueBlockGridLayoutItemModel, type BlockValueBlockListLayoutItemModel, OpenAPI } from \"@api\";\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth'\nimport { UmbStringState } from \"@umbraco-cms/backoffice/observable-api\";\n\nexport class BlockPreviewManagementContext extends UmbControllerBase {\n\n  #repository: BlockPreviewManagementRepository;\n\n  #markup = new UmbStringState(\"\");\n  public readonly markup = this.#markup.asObservable();\n\n  constructor(host: UmbControllerHost) {\n    super(host);\n\n    this.provideContext(BLOCKPREVIEW_MANAGEMENT_CONTEXT_TOKEN, this);\n    this.#repository = new BlockPreviewManagementRepository(this);\n\n    this.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\n      OpenAPI.TOKEN = () => _auth.getLatestToken();\n      OpenAPI.WITH_CREDENTIALS = true;\n    });\n\n  }\n\n  async previewGridMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockGridLayoutItemModel) {\n    const { data } = await this.#repository.previewGridMarkup(pageId, blockEditorAlias, culture, requestBody);\n    if (data) {\n      this.#markup.setValue(data);\n    }\n  }\n\n  async previewListMarkup(pageId?: number, blockEditorAlias?: string, culture?: string, requestBody?: BlockValueBlockListLayoutItemModel) {\n    const { data } = await this.#repository.previewListMarkup(pageId, blockEditorAlias, culture, requestBody);\n    if (data) {\n      this.#markup.setValue(data);\n    }\n  }\n  \n}\n\nexport default BlockPreviewManagementContext;\n\nexport const BLOCKPREVIEW_MANAGEMENT_CONTEXT_TOKEN = new UmbContextToken<BlockPreviewManagementContext>(BlockPreviewManagementContext.name);"],"names":["BlockPreviewManagementDataSource","host","__privateAdd","_host","__privateSet","pageId","blockEditorAlias","culture","requestBody","tryExecuteAndNotify","__privateGet","BlockPreviewService","BlockPreviewManagementRepository","UmbControllerBase","_blockPreviewDataSource","BlockPreviewManagementContext","_repository","_markup","UmbStringState","BLOCKPREVIEW_MANAGEMENT_CONTEXT_TOKEN","UMB_AUTH_CONTEXT","_auth","OpenAPI","data","UmbContextToken"],"mappings":";;;;;;;;;;;;;;;;AAYO,MAAMA,EAAmE;AAAA,EAI9E,YAAYC,GAAyB;AAFrC,IAAAC,EAAA,MAAAC,GAAA;AAGE,IAAAC,EAAA,MAAKD,GAAQF;AAAA,EACf;AAAA,EAEA,MAAM,kBAAkBI,GAAiBC,GAA2BC,GAAkBC,GAA0F;AAC9K,WAAO,MAAMC,EAAoBC,EAAA,MAAKP,IAAOQ,EAAoB,8CAA8C,EAAE,QAAAN,GAAQ,kBAAAC,GAAkB,SAAAC,GAAS,aAAAC,EAAY,CAAC,CAAC;AAAA,EACpK;AAAA,EAEA,MAAM,kBAAkBH,GAAiBC,GAA2BC,GAAkBC,GAA0F;AAC9K,WAAO,MAAMC,EAAoBC,EAAA,MAAKP,IAAOQ,EAAoB,8CAA8C,EAAE,QAAAN,GAAQ,kBAAAC,GAAkB,SAAAC,GAAS,aAAAC,EAAY,CAAC,CAAC;AAAA,EACpK;AAED;AAdCL,IAAA;;ACTK,MAAMS,UAAyCC,EAAkB;AAAA,EAGtE,YAAYZ,GAAyB;AACnC,UAAMA,CAAI;AAHZ,IAAAC,EAAA,MAAAY,GAAA;AAIO,IAAAV,EAAA,MAAAU,GAA0B,IAAId,EAAiC,IAAI;AAAA,EAC1E;AAAA,EAEA,MAAM,kBAAkBK,GAAiBC,GAA2BC,GAAkBC,GAAkD;AACtI,WAAO,MAAME,EAAA,MAAKI,GAAwB,kBAAkBT,GAAQC,GAAkBC,GAASC,CAAW;AAAA,EAC5G;AAAA,EAEA,MAAM,kBAAkBH,GAAiBC,GAA2BC,GAAkBC,GAAkD;AACtI,WAAO,MAAME,EAAA,MAAKI,GAAwB,kBAAkBT,GAAQC,GAAkBC,GAASC,CAAW;AAAA,EAC5G;AAEF;AAfEM,IAAA;;ACIK,MAAMC,UAAsCF,EAAkB;AAAA,EAOnE,YAAYZ,GAAyB;AACnC,UAAMA,CAAI;AANZ,IAAAC,EAAA,MAAAc,GAAA;AAEA,IAAAd,EAAA,MAAAe,GAAA;AAAU,IAAAb,EAAA,MAAAa,GAAA,IAAIC,EAAe,EAAE,IACf,KAAA,SAASR,EAAA,MAAKO,GAAQ,aAAa,GAK5C,KAAA,eAAeE,GAAuC,IAAI,GAC1Df,EAAA,MAAAY,GAAc,IAAIJ,EAAiC,IAAI,IAEvD,KAAA,eAAeQ,GAAkB,CAACC,MAAU;AACvC,MAAAC,EAAA,QAAQ,MAAMD,EAAM,eAAe,GAC3CC,EAAQ,mBAAmB;AAAA,IAAA,CAC5B;AAAA,EAEH;AAAA,EAEA,MAAM,kBAAkBjB,GAAiBC,GAA2BC,GAAkBC,GAAkD;AAChI,UAAA,EAAE,MAAAe,EAAK,IAAI,MAAMb,EAAA,MAAKM,GAAY,kBAAkBX,GAAQC,GAAkBC,GAASC,CAAW;AACxG,IAAIe,KACGb,EAAA,MAAAO,GAAQ,SAASM,CAAI;AAAA,EAE9B;AAAA,EAEA,MAAM,kBAAkBlB,GAAiBC,GAA2BC,GAAkBC,GAAkD;AAChI,UAAA,EAAE,MAAAe,EAAK,IAAI,MAAMb,EAAA,MAAKM,GAAY,kBAAkBX,GAAQC,GAAkBC,GAASC,CAAW;AACxG,IAAIe,KACGb,EAAA,MAAAO,GAAQ,SAASM,CAAI;AAAA,EAE9B;AAEF;AAhCEP,IAAA,eAEAC,IAAA;AAkCK,MAAME,IAAwC,IAAIK,EAA+CT,EAA8B,IAAI;"}