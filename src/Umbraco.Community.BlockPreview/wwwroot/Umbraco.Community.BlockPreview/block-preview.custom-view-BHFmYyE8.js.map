{"version":3,"file":"block-preview.custom-view-BHFmYyE8.js","sources":["../../assets/src/blockEditor/block-preview.custom-view.ts"],"sourcesContent":["import { UMB_BLOCK_GRID_ENTRY_CONTEXT, UmbBlockGridValueModel } from \"@umbraco-cms/backoffice/block-grid\";\r\nimport { UmbDocumentWorkspaceContext } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { css, customElement, html, property, state, unsafeHTML } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { UMB_PROPERTY_CONTEXT, UMB_PROPERTY_DATASET_CONTEXT } from \"@umbraco-cms/backoffice/property\";\r\nimport { UMB_WORKSPACE_CONTEXT } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { UmbBlockGridEntryContext } from \"../../node_modules/@umbraco-cms/backoffice/dist-cms/packages/block/block-grid/context/block-grid-entry.context\";\r\nimport BlockPreviewContext, { BLOCK_PREVIEW_CONTEXT } from \"../context/blockpreview.context\";\r\n\r\nconst elementName = \"block-preview\";\r\nexport const UMB_BLOCK_LIST_PROPERTY_EDITOR_ALIAS: string = 'Umbraco.BlockList';\r\n\r\n@customElement(elementName)\r\nexport class BlockPreviewCustomView\r\n    extends UmbLitElement\r\n    implements UmbPropertyEditorUiElement {\r\n\r\n    #blockPreviewContext?: BlockPreviewContext;\r\n    #blockGridEntryContext?: UmbBlockGridEntryContext;\r\n\r\n    @state()\r\n    _htmlMarkup: string | undefined = \"\";\r\n\r\n    @state()\r\n    private _documentUnique?: string = '';\r\n\r\n    @state()\r\n    private _blockEditorAlias?: string = '';\r\n\r\n    @state()\r\n    private _culture?: string = '';\r\n\r\n    @state()\r\n    _workspaceEditContentPath?: string;\r\n\r\n    @state()\r\n    private _value: UmbBlockGridValueModel = {\r\n        layout: {},\r\n        contentData: [],\r\n        settingsData: []\r\n    }\r\n\r\n    @property({ attribute: false })\r\n    public set value(value: UmbBlockGridValueModel | undefined) {\r\n        const buildUpValue: Partial<UmbBlockGridValueModel> = value ? { ...value } : {};\r\n        buildUpValue.layout ??= {};\r\n        buildUpValue.contentData ??= [];\r\n        buildUpValue.settingsData ??= [];\r\n        this._value = buildUpValue as UmbBlockGridValueModel;\r\n    }\r\n    public get value(): UmbBlockGridValueModel {\r\n        return this._value;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(BLOCK_PREVIEW_CONTEXT, (instance) => {\r\n            this.#blockPreviewContext = instance;\r\n        });\r\n\r\n        this.consumeContext(UMB_PROPERTY_CONTEXT, (instance) => {\r\n            this.observe(instance.alias, (alias) => {\r\n                this._blockEditorAlias = alias;\r\n            });\r\n        })\r\n\r\n        this.consumeContext(UMB_BLOCK_GRID_ENTRY_CONTEXT, (instance) => {\r\n            this.#blockGridEntryContext = instance;\r\n\r\n            this.observe(this.#blockGridEntryContext.workspaceEditContentPath, (path) => {\r\n                this._workspaceEditContentPath = path;\r\n            });\r\n\r\n            this.observe(this.#blockGridEntryContext.content, (content) => {\r\n                const contentArr = [content!];\r\n                this._value = { ...this._value, contentData: contentArr };\r\n            });\r\n\r\n            this.observe(this.#blockGridEntryContext.settings, (settings) => {\r\n                if (settings !== undefined) {\r\n                    const settingsArr = [settings!];\r\n                    this._value = { ...this._value, settingsData: settingsArr };\r\n                }\r\n            });\r\n\r\n            this.observe(this.#blockGridEntryContext.layout, (layout) => {\r\n                const layoutArr = [layout!];\r\n                this._value = { ...this._value, layout: { [\"Umbraco.BlockGrid\"]: layoutArr } };\r\n            });\r\n        });\r\n\r\n        this.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, (instance) => {\r\n            this._culture = instance.getVariantId().culture ?? undefined;\r\n        });\r\n\r\n        this.consumeContext(UMB_WORKSPACE_CONTEXT, (nodeContext) => {\r\n            const workspaceContext = (nodeContext as UmbDocumentWorkspaceContext);\r\n\r\n            this.observe((workspaceContext).unique, (unique) => {\r\n                this._documentUnique = unique;\r\n            });\r\n        });\r\n    }\r\n\r\n    async connectedCallback() {\r\n        super.connectedCallback();\r\n\r\n        if (this.#blockPreviewContext != null && this.value != null) {\r\n            this._htmlMarkup = await this.#blockPreviewContext.previewGridMarkup(this._documentUnique, this._blockEditorAlias, this._culture, this.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this._htmlMarkup !== \"\") {\r\n            return html`\r\n                <a href=${this._workspaceEditContentPath}>\r\n\t\t\t\t    ${unsafeHTML(this._htmlMarkup)}\r\n\t\t\t\t</a>`;\r\n        }\r\n        return;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            a {\r\n                display: contents;\r\n                color: inherit;\r\n            }\r\n        `\r\n    ]\r\n}\r\n\r\nexport default BlockPreviewCustomView;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [elementName]: BlockPreviewCustomView;\r\n    }\r\n}\r\n"],"names":["_blockPreviewContext","_blockGridEntryContext","elementName","UMB_BLOCK_LIST_PROPERTY_EDITOR_ALIAS","BlockPreviewCustomView","UmbLitElement","__privateAdd","BLOCK_PREVIEW_CONTEXT","instance","__privateSet","UMB_PROPERTY_CONTEXT","alias","UMB_BLOCK_GRID_ENTRY_CONTEXT","__privateGet","path","content","contentArr","settings","settingsArr","layout","layoutArr","UMB_PROPERTY_DATASET_CONTEXT","UMB_WORKSPACE_CONTEXT","nodeContext","workspaceContext","unique","value","buildUpValue","html","unsafeHTML","css","__decorateClass","state","property","customElement","BlockPreviewCustomView$1"],"mappings":"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"}